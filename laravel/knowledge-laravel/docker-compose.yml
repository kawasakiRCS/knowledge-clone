services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: knowledge-laravel:latest
    container_name: knowledge-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    ports:
      - "${APP_PORT:-80}:80"
      - "${VITE_PORT:-5173}:5173"
    environment:
      - DB_HOST=postgres
      - DB_DATABASE=${DB_DATABASE:-knowledge_laravel}
      - DB_USERNAME=${DB_USERNAME:-sail}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
      - MEILISEARCH_HOST=http://meilisearch:7700
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    networks:
      - knowledge-network

  postgres:
    image: postgres:16
    container_name: knowledge-postgres
    restart: unless-stopped
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-knowledge_laravel}
      POSTGRES_USER: ${DB_USERNAME:-sail}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      PGPASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - knowledge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-sail} -d ${DB_DATABASE:-knowledge_laravel}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: knowledge-redis
    restart: unless-stopped
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - knowledge-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: knowledge-meilisearch
    restart: unless-stopped
    ports:
      - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    environment:
      MEILI_NO_ANALYTICS: ${MEILISEARCH_NO_ANALYTICS:-false}
      MEILI_ENV: ${MEILISEARCH_ENV:-development}
      MEILI_MASTER_KEY: ${MEILISEARCH_KEY:-}
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - knowledge-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://127.0.0.1:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    container_name: knowledge-mailpit
    restart: unless-stopped
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
      - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    networks:
      - knowledge-network

  # Composerサービス（初期セットアップ用）
  composer:
    image: composer:latest
    container_name: knowledge-composer
    volumes:
      - ./:/app
    working_dir: /app
    command: install --optimize-autoloader --no-dev
    networks:
      - knowledge-network
    profiles:
      - setup

  # NPMサービス（初期セットアップ用）
  npm:
    image: node:20-alpine
    container_name: knowledge-npm
    volumes:
      - ./:/app
    working_dir: /app
    command: sh -c "npm ci && npm run build"
    networks:
      - knowledge-network
    profiles:
      - setup

networks:
  knowledge-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  meilisearch_data:
    driver: local